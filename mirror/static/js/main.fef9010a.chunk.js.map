{"version":3,"sources":["api.js","ModuleContainer/ModuleContainer.js","Module/Layer/Layer.js","Module/Module.js","Settings/Settings.js","Module/LayerOutputs/LayerOutputs.js","App.js","serviceWorker.js","index.js"],"names":["api","GET_MODULE","GET_VISUALISATIONS","PUT_VISUALISATIONS","getModuleLayerOutput","id","concat","ModuleContainer","state","tree","visualisations","currentVisualisation","isLoading","open","outputs","layer","name","last","next","settings","size","toogleDrawer","_callee","regenerator_default","a","wrap","_context","prev","_this","setState","stop","this","getLayerOutputs","_callee2","start","isSameLayer","res","_args2","arguments","_context2","length","undefined","axios","get","params","sent","data","links","t0","changeSettings","_callee3","_context3","current","put","key","Container","Layer","getMoreOnScrollBottom","isCurrentLayer","props","module","layerId","window","scrollY","scrollMaxY","handleClick","renderLayer","split","react_default","createElement","List_default","ListItem_default","button","onClick","ListItemText_default","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","children","map","el","i","deepth","addEventListener","style","marginLeft","Component","Module","getTree","Module_Layer_Layer","VisualisationSettings","update","value","param","Object","objectSpread","fromDown","makeParam","type","max","min","step","Slider_default","aria-labelledby","onChange","debounce","e","v","Radio_default","checked","aria-label","_this2","_this$props","classes","disablePadding","className","sliders","keys","k","assign","VisualisationSettingsRoot","down","console","log","visualisation","_this3","setVisualisationsSettings","_this4","_this$props2","Settings_VisualisationSettings","Settings","onVisualisationSettingsChange","_this5","handleSlider","getVisualisations","_this6","_this$props3","toogle","_this$props3$small","small","Drawer_default","anchor","variant","drawer","onClose","paper","drawerPaper","toolbar","Settings_VisualisationSettingsRoot","Image","_ref2","src","height","width","Grid_default","item","LayerOutputs","container","direction","justify","alignItems","spacing","xs","Typography_default","gutterBottom","textAlign","link","LayerOutputs_Image","Button_default","color","React","MyAppBar","_ref","AppBar_default","position","appBar","Toolbar_default","noWrap","flexGrow","Hidden_default","mdUp","IconButton_default","MoreVert_default","App","openSettings","toggleSettings","unstated_es","to","root","Module_Module","LinearProgress_default","progress","content","Module_LayerOutputs_LayerOutputs","smDown","src_Settings_Settings","StyledApp","withStyles","theme","display","flexDirection","minHeight","typography","useNextVariants","zIndex","flexShrink","backgroundColor","palette","background","default","padding","unit","mixins","top","layersOuput","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fef9010a.chunk.js","sourcesContent":["\nconst api = {\n    GET_MODULE : '/api/model',\n    GET_VISUALISATIONS: '/api/visualisation',\n    PUT_VISUALISATIONS: '/api/visualisation',\n    getModuleLayerOutput : (id) => `/api/model/layer/output/${id}`\n}\n\nexport default api","import React, { Component } from 'react'\nimport { Container } from 'unstated';\nimport axios from 'axios'\nimport api from '../api.js'\nimport querystring from 'querystring'\n\nclass ModuleContainer extends Container {\n    state = {\n        tree: null,\n        visualisations: [],\n        currentVisualisation: {},\n        isLoading: false,\n        open: false,\n        outputs: [],\n        layer: { name : ''},\n        last: 0,\n        next: false,\n        settings: { size: 50 }\n    }\n\n    async getTree() {\n        await this.setState({ isLoading: true })\n\n        const res = await axios.get(api.GET_MODULE)\n        const tree = res.data\n\n        await this.setState({ tree, isLoading: false })\n    }\n\n    toogleDrawer = async () => {\n        await this.setState({ open: !this.state.open })\n\n    }\n\n    getLayerOutputs = async (layer=this.state.layer, start=false) => {\n        var isSameLayer = layer.id == this.state.layer.id\n        if(start) isSameLayer = false\n        var last = isSameLayer ? this.state.last + 64 : 0\n        try {\n            await this.setState({ isLoading: true })\n\n            const res = await axios.get(api.getModuleLayerOutput(layer.id, last), { params: { last } })\n    \n            var outputs = isSameLayer ? this.state.outputs.concat(res.data.links) : res.data.links\n            \n            await this.setState({ outputs, layer, last, isLoading: false, next: res.data.next })\n        } catch {\n            await this.setState({ isLoading: false })\n        }\n    }\n\n    changeSettings = async(settings) => {\n        await this.setState( { settings })\n    }\n\n    async getVisualisations() {\n        await this.setState({ isLoading: true })\n\n        const res = await axios.get(api.GET_VISUALISATIONS)\n        const visualisations = res.data.visualisations\n        const currentVisualisation = res.data.current\n        await this.setState({ visualisations, isLoading: false, currentVisualisation })\n    }\n\n    async setVisualisationsSettings(data){\n        await this.setState({ isLoading: true })\n\n        const res = await axios.put(api.PUT_VISUALISATIONS, data)\n\n        const currentVisualisation = res.data\n        var visualisations = [...this.state.visualisations]\n        // TODO could be smarter!\n        for(let key in visualisations){\n            if(visualisations[key].name == currentVisualisation.name){\n                visualisations[key] = currentVisualisation\n            }\n        }\n        await this.setState({isLoading: false, currentVisualisation, visualisations })\n\n    }\n\n\n}\n\nexport default ModuleContainer","import React, { Component } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst styles = theme => ({\n    nested: {\n        paddingLeft: props => theme.spacing.unit * props.deepth,\n    }\n})\n\nclass Layer extends Component {\n\n    state = {\n        open: false,\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.getMoreOnScrollBottom)\n    }\n\n    getMoreOnScrollBottom = () => {\n        const isCurrentLayer =  this.props.module.state.layerId == this.props.layer.id\n\n        if (window.scrollY == window.scrollMaxY && isCurrentLayer && !this.props.module.state.isLoading) {\n            this.props.module.getLayerOutputs(this.props.layer.id)\n        } \n    }\n\n    componentWillUnmount() {\n        window.addEventListener('scroll', this.getMoreOnScrollBottom)\n    }\n\n    handleClick = (layer) => {\n        this.setState(state => ({ open: !state.open }));\n        this.props.module.getLayerOutputs(layer)\n    }\n\n    renderLayer = (layer) => {\n\n        const name = this.props.layer.name.split('(')[0]\n\n        return (<List>\n            <ListItem button onClick={() => this.handleClick(this.props.layer)} >\n                <ListItemText primary={name} />\n                {this.state.open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                {layer.children.map((el, i) => (<Layer layer={el} module={this.props.module} key={i} deepth={this.props.deepth + 1}>\n                </Layer>))}\n            </Collapse>\n        </List>\n        )\n    }\n\n    render() {\n        const layer = this.props.layer\n        return (\n            <List style={{ marginLeft: 8 * this.props.deepth / 2 }}>\n                {layer ? this.renderLayer(layer) : (<ListItem></ListItem>)}\n            </List>\n        )\n    }\n}\n\n\nexport default Layer;\n","import React, { Component } from 'react'\nimport Layer from './Layer/Layer';\nimport List from '@material-ui/core/List';\n\nexport default class Module extends Component {\n    componentDidMount(){\n        this.props.module.getTree()\n    }\n\n\n    render() {\n        var tree = this.props.module.state.tree\n\n        return (\n        <List>\n            <Layer layer={tree} module={this.props.module} deepth={1}/>\n        </List>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport ModuleContainer from '../ModuleContainer/ModuleContainer'\nimport { Provider, Subscribe } from 'unstated';\n\nimport Slider from '@material-ui/lab/Slider';\nimport Radio from '@material-ui/core/Radio';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport {debounce} from 'throttle-debounce';\n\n\nclass VisualisationSettings extends Component{\n\n    update = (value) => {\n        var param = {...this.props.param, ...value}\n        // console.log('value', value)\n        // console.log('this.props.visualisation,', this.props.param)\n        // console.log('visualisation,', param)\n        const key = this.props.name\n        var fromDown =  {}\n        fromDown[key] = param\n        this.props.update( fromDown)\n    }\n\n    makeParam = (param) => {\n        if(param.type == 'slider') {\n            var { max, min, step, value } = param\n            return  (<Slider\n                        value={value}\n                        aria-labelledby=\"label\"\n                        min={min}\n                        max={max}\n                        step={step}\n                        onChange={debounce(300, (e, v) => this.update({...param,  ...{value : v}})) }\n                    />)\n        }\n\n        if(param.type == 'radio') {\n            return   (<Radio\n                    checked={param.value}\n                    onChange={(e, v) => this.update({...param,  ...{value : !param.value}}) }\n                    value=\"a\"\n                    name=\"radio-button-demo\"\n                    aria-label=\"A\"\n                    />)\n        }\n    }\n\n    render(){\n        const { classes, module, param, name} = this.props\n        const {params} = param\n\n        return (\n            <List disablePadding>\n                <ListItem>\n                    <ListItemText>\n                    <div>{name}</div>\n                    <div className={classes.sliders}>\n                    {this.makeParam(param)}\n                    </div>\n                    </ListItemText>\n                </ListItem>\n                <ListItem>\n                {Object.keys(params).map((k, i) => (<VisualisationSettings \n                    {...this.props}\n                    name={k}\n                    param={params[k]} \n                    update={this.update}\n                    key={i}/>))}\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nclass VisualisationSettingsRoot extends Component {\n    update = (value, down=true) => {\n        console.log('from down', value)\n        \n        if(down) {\n            var visualisation = {...this.props.visualisation.params, ...value}\n            visualisation = {...this.props.visualisation, params: visualisation}\n        } else{\n            visualisation = {...this.props.visualisation, ...value}\n        }\n        console.log(visualisation)\n        this.props.module.setVisualisationsSettings(visualisation)\n        this.props.module.getLayerOutputs(this.props.module.state.layer, true)\n\n    }\n\n    render(){\n        const { module, visualisation} = this.props\n        const { name, params} = visualisation\n\n        return (\n            <List>\n                <ListItem>\n                    <ListItemText>\n                    <div>{name}</div>\n                    </ListItemText>\n                    <Radio\n                    checked={this.props.module.state.currentVisualisation.name == name}\n                    onChange={(e, v) => this.update({...visualisation, value:v }, false) }\n                    value=\"a\"\n                    name=\"radio-button-demo\"\n                    aria-label=\"A\"\n                    />\n                </ListItem>\n                    {Object.keys(params).map((k, i) => (<VisualisationSettings \n                    {...this.props}\n                    name={k}\n                    param={params[k]} \n                    update={this.update}\n                    key={i}/>))}\n            </List>\n        )\n    }\n}\n\n\nclass Settings extends Component {\n    componentDidMount(){\n        this.props.module.getVisualisations()\n    }\n\n    onVisualisationSettingsChange = (data) => {\n        this.props.module.setVisualisationsSettings(data)\n    }\n\n    handleSlider = (e, size) => {\n        const { module } = this.props\n        var settings = module.state.settings\n\n        settings = Object.assign({}, settings, { size })\n\n        module.changeSettings(settings)\n    }\n\n\n    render() {\n        const { toogle, classes, open, module, small=false } = this.props\n        return (\n            <Drawer anchor=\"right\"\n                variant={small ? 'temporary' : 'permanent'} \n                open={open}\n                className={classes.drawer}\n                onClose={toogle}\n                classes={{\n                    paper: classes.drawerPaper,\n                  }}\n                >\n                <div className={classes.toolbar} />\n                <List className={classes.settings}>\n                    <ListItem>\n                        <ListItemText>\n                            Image size : {module.state.settings.size}\n                        </ListItemText>\n\n                    </ListItem>\n                    <ListItem>\n                        <Slider\n                            value={module.state.settings.size}\n                            aria-labelledby=\"label\"\n                            min={1}\n                            max={100}\n                            step={1}\n                            onChange={this.handleSlider}\n                        />\n                    </ListItem>\n                </List>\n\n                  <List className={classes.settings}>\n                  <ListItem>\n\n                  <ListItemText>\n                  <div>Visualisations</div>\n                        {this.props.module.state.visualisations.map((v,i)=> <VisualisationSettingsRoot \n                        key={i}\n                        {...this.props} \n                        visualisation={v} \n                        update={this.onVisualisationSettingsChange}/>)}\n                  </ListItemText>\n                  </ListItem>\n\n                  </List>\n            </Drawer>\n        )\n    }\n\n}\n\nexport default Settings","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid';\n\nimport Slider from '@material-ui/lab/Slider';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nclass AtomicImage  extends Component {\n    constructor(props) {\n         super(props);\n         this.state = {dimensions: {}};\n         this.onImgLoad = this.onImgLoad.bind(this);\n     }\n     onImgLoad({target:img}) {\n         this.setState({dimensions:{height:img.offsetHeight,\n                                    width:img.offsetWidth}});\n     }\n     render(){\n         const {src, size} = this.props;\n         const {width, height} = this.state.dimensions;\n        \n         const style = {\n            // backgroundImage : `url(${src})`,\n            // backgroundSize: 100% 100%,\n            height: `${height * size}px`,\n            width: `${width * size}px`\n        }\n\n        \n         return (\n                 <img onLoad={this.onImgLoad} src={src}/>\n                );\n     }\n }\n\n\nconst Image = ({ src, size }) => {\n    const style = {\n        // backgroundImage : `url(${src})`,\n        // backgroundSize: 100% 100%,\n        height: `${100 * (size / 10)}px`,\n        width: `${100 * (size / 10)}px`\n    }\n\n    return (<Grid item>\n        <img src={src} style={style} />\n    </Grid>)\n}\n\nclass LayerOutputs extends React.Component {\n    render() {\n        const { module, classes } = this.props\n\n        return (\n            <div >\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={8}\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" gutterBottom style={{ textAlign: 'center' }}>\n                            {module.state.layer.name.split('(')[0]}\n                        </Typography>\n                    </Grid>\n                    {module.state.outputs.map((link, i) =>\n                        <Image src={link} {...module.state.settings} key={i}></Image>\n                    )}\n\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={8}\n                >\n                    <Grid item>\n                    {this.props.module.state.outputs.length == 0 ? \n                        (<h1>Nothing to show</h1>) : \n                        this.props.module.state.next ? (\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => module.getLayerOutputs()}>\n                            More\n                        </Button>) : ''}\n                        \n                    </Grid>\n                </Grid>\n            </div>\n\n        )\n    }\n}\nexport default LayerOutputs","import React, { Component } from 'react';\nimport './App.css';\n\nimport ModuleContainer from './ModuleContainer/ModuleContainer'\nimport { Provider, Subscribe } from 'unstated';\nimport Module from './Module/Module';\nimport Settings from './Settings/Settings'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport LayerOutputs from './Module/LayerOutputs/LayerOutputs'\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport Hidden from '@material-ui/core/Hidden';\n\nconst drawerWidth = 300;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    // height: 440,\n    // zIndex: 1,\n    // overflow: 'hidden',\n    // position: 'relative',\n    display: 'flex',\n    flexDirection : 'row',\n    minHeight: '100vh'\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    flexShrink: 0,\n\n    // position: 'relative',\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    // marginLeft: '300px',\n    // position: 'fixed',\n    // width: '100%',\n    // height: '100%',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    // minWidth: 0, // So the Typography noWrap works\n  },\n  toolbar: theme.mixins.toolbar,\n\n  progress: {\n    position: 'fixed',\n    top: '0',\n    width: '100vw',\n    zIndex: 9999\n  },\n\n  settings: {\n    width: '300px !important'\n  },\n\n  sliders : {\n    width: '200px !important'\n  },\n\n  layersOuput : {\n  }\n})\n\nfunction MyAppBar({ module, classes }) {\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Mirror\n      </Typography>\n      <div style={{flexGrow: 1}} ></div>\n      <Hidden mdUp>\n        <IconButton color=\"inherit\" onClick={module.toogleDrawer}>\n          <MoreIcon />\n        </IconButton>\n        </Hidden>\n\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nclass App extends Component {\n  state = {\n    openSettings: false\n\n  }\n\n\n  toggleSettings = () => {\n    const openSettings = !this.state.openSettings\n    this.setState({ openSettings })\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Provider>\n        <Subscribe to={[ModuleContainer]}>\n          {module => (\n            <div className={classes.root}>\n              <MyAppBar module={MyAppBar} {...this.props} module={module} />\n\n              <Drawer variant=\"permanent\"\n                      className={classes.drawer}\n\n              classes={{\n                paper: classes.drawerPaper,\n              }}>\n                <div className={classes.toolbar} />\n                <Module module={module} />\n              </Drawer>\n\n              {module.state.isLoading ? (<LinearProgress color=\"secondary\" className={classes.progress} />) : ''}\n\n              <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <LayerOutputs module={module} classes={classes}/>\n              </main>\n\n                <Hidden smDown >\n              <Settings\n                toogle={module.toogleDrawer}\n                open={module.state.open}\n                module={module} \n                classes={classes}/>\n                  </Hidden>\n\n              <Hidden mdUp>\n                <Settings\n                toogle={module.toogleDrawer}\n                open={module.state.open}\n                module={module} \n                classes={classes}\n                small={true}/>\n                  </Hidden>\n\n            </div>\n          )}\n        </Subscribe>\n      </Provider>\n    );\n  }\n}\n\n\nvar StyledApp = withStyles(styles)(App)\n\n\nexport default StyledApp\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}